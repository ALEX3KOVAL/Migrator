/*
 * This source file was generated by the Gradle 'init' task
 */
package ru.alex3koval.migrator

import com.charleskorn.kaml.Yaml
import kotlinx.serialization.decodeFromString

class Migrator(configPath: String) {
    private val workspaces: MutableMap<String, Workspace> = mutableMapOf()

    init {
        val migratorConfig = Migrator::class.java
            .getResourceAsStream(configPath)!!
            .bufferedReader()
            .use { it.readText() }

        Yaml.default
            .decodeFromString<Map<String, Config>>(migratorConfig)
            .forEach {
                workspaces[it.key] = Workspace(it.key, it.value)
            }
    }

    fun migrate() {
        println("Migrator")

        workspaces.forEach { (_, workspace) ->
            if (workspace.run()) {
                return@forEach println("${ConsoleColor.GREEN}MIGRATIONS COMPLETED${ConsoleColor.RESET}\n")
            }
            println("${ConsoleColor.RED}MIGRATIONS FAILED${ConsoleColor.RESET}\n")
        }
    }
}
